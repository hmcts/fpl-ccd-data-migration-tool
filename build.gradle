import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

plugins {
  id 'application'
  id 'checkstyle'
  id 'org.springframework.boot' version '2.5.6'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'uk.gov.hmcts.reform'
version = "1.0.0-" + LocalDateTime.now().format(DateTimeFormatter.ofPattern("YYYYMMdd-HHmm"))

sourceCompatibility = '11'
targetCompatibility = '11'

mainClassName = 'uk.gov.hmcts.reform.migration.CaseMigrationRunner'

compileJava {
  options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

compileTestJava {
  options.compilerArgs << '-Xlint:deprecation'
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url "https://repo.spring.io/milestone"
  }
  jcenter()

  maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
  maven { url "http://repo.maven.apache.org/maven2" }
}

def versions = [
  lombok: '1.18.8',
  mockito: '3.7.7',
  junit_jupiter: '5.7.1'
]

dependencies {
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  compile group: 'uk.gov.hmcts.reform.ccd-case-migration', name: 'processor', version: '3.0.0'
  compile group: 'uk.gov.hmcts.reform.ccd-case-migration', name: 'domain', version: '3.0.0'
  compile group: 'com.google.guava', name: 'guava', version: '28.0-jre'

  testCompile group: 'org.junit.jupiter', name: 'junit-jupiter', version: versions.junit_jupiter
  testCompile group: 'org.assertj', name: 'assertj-core', version: '3.11.1'

  testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    exclude group: "com.vaadin.external.google", module: "android-json"
  }

  testCompile group: 'org.mockito', name: 'mockito-core', version: versions.mockito
  testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: versions.mockito
  testCompile group: 'org.mockito', name: 'mockito-inline', version: versions.mockito
}

checkstyle {
  maxWarnings = 0
  toolVersion = "8.25"
  // need to set configDirectory to rootDir otherwise submodule will use submodule/config/checkstyle
  configDirectory.set(file("$rootDir/config/checkstyle"))
}

test {
  useJUnitPlatform()
}
